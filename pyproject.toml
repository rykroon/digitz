[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "digitz"
dynamic = ["version"]
description = 'Python phone numbers made easy.'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Ryan Kroon", email = "rykroon.tech@gmail.com" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "phonenumbers==8.13.*",
]

[project.urls]
Documentation = "https://github.com/rykroon/digitz#readme"
Issues = "https://github.com/rykroon/digitz/issues"
Source = "https://github.com/rykroon/digitz"

[tool.hatch.version]
path = "src/digitz/__about__.py"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"
cov-combine = "coverage combine"
cov-report = "coverage report -m"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/digitz tests}"

[tool.coverage.run]
source_pkgs = ["digitz", "tests"]
branch = true
parallel = true
omit = [
  "src/digitz/__about__.py",
]

[tool.coverage.paths]
digitz = ["src/digitz", "*/digitz/src/digitz"]
tests = ["tests", "*/digitz/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.envs.docs]
python="3.13"
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings[python]",
]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve"